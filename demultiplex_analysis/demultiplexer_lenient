#! /bin/bash
#works in exactly the same way as the demulitplex_runner but uses agrep instead of grep. Plan to merge these two files in the future.


fastq1=("lane1_Undetermined_L001_R1_001.fastq" "lane1_Undetermined_L001_R1_002.fastq" "lane1_Undetermined_L001_R1_003.fastq" "lane1_Undetermined_L001_R1_004.fastq")
fastq2=("lane1_Undetermined_L001_R2_001.fastq" "lane1_Undetermined_L001_R2_002.fastq" "lane1_Undetermined_L001_R2_003.fastq" "lane1_Undetermined_L001_R2_004.fastq")
filepath="/home/jmellor/miseq/130626_M00730_0099_000000000-A2W66/Unaligned3/Undetermined_indices/Sample_lane1/"
no_files=${#fastq1[@]}   
output_dir="lenient_results"
strict_reads=0
lenient_reads=0


rm -rf $output_dir/*
mkdir $output_dir/up
mkdir $output_dir/down

> raw_reads

for ((i=0; i<$no_files; i++))
do
	pr -mtJ "$filepath${fastq1[i]}" "$filepath${fastq2[i]}" | awk '0==(NR+2)%4' >> raw_reads
	echo "$i"
done

row1=$(agrep -1 "	TCGCCTTA" raw_reads)
row2=$(agrep -1 "	CTAGTACG" raw_reads)
row3=$(agrep -1 "	TTCTGCCT" raw_reads)
row4=$(agrep -1 "	GCTCAGGA" raw_reads)
rows=("$row1" "$row2" "$row3" "$row4")

for ((i=0; i<${#rows[@]}; i++))
do
	row_number=$((i+1))
	echo "${rows[i]}" | agrep -1 "^TAGATCGC" > "$output_dir/A$row_number"
        echo "${rows[i]}" | agrep -1 "^CTCTCTAT" > "$output_dir/B$row_number"
        echo "${rows[i]}" | agrep -1 "^TATCCTCT" > "$output_dir/C$row_number"
        echo "${rows[i]}" | agrep -1 "^AGAGTAGA" > "$output_dir/D$row_number"
        echo "${rows[i]}" | agrep -1 "^GTAAGGAG" > "$output_dir/E$row_number"
        echo "${rows[i]}" | agrep -1 "^ACTGCATA" > "$output_dir/F$row_number"
echo "$i"
done



for f in $output_dir/* 
do
	file_name=$(basename "ls $f")
	agrep -1 "CGGTGTCGGTCTCGTAG" $f > "$output_dir/down/$file_name"
	agrep -1 "GATGTCCACGAGGTCTCT" $f > "$output_dir/up/$file_name"
	echo "$file_name"	
done

rm $output_dir/down/down
rm $output_dir/down/up
rm $output_dir/up/up
rm $output_dir/up/down


>lenient_counts
for f in $output_dir/up/*
do
	wc -l $f >> lenient_counts
done


for f in $output_dir/down/*
do
        wc -l $f >> lenient_counts
done












strict_reads() {
	1=$(pr -mt "$filepath$1" "$filepath$2" | awk '0==(NR+2)%4' | grep "$i" | grep -c "$j")
	echo $no_strict_reads
	total_strict_reads=$(($no_strict_reads + $total_strict_reads))
}



lenient_reads() {
	i="^"$3
        j=" "$4
        local no_lenient_reads=$(pr -mt "$filepath$1" "$filepath$2" | awk '0==(NR+2)%4' | agrep -1 "$i" | agrep -1 -c "$j")
	echo $no_lenient_reads
	total_lenient_reads=$(($no_lenient_reads + $total_lenient_reads))
}



#strict_reads "lane1_Undetermined_L001_R1_001.fastq" "lane1_Undetermined_L001_R2_001.fastq" "TAGATCGCGATGTCCACGAGGTCTCT" "TCGCCTTA"

#lenient_reads "lane1_Undetermined_L001_R1_001.fastq" "lane1_Undetermined_L001_R2_001.fastq" "TAGATCGCGATGTCCACGAGGTCTCT" "TCGCCTTA"



exit

